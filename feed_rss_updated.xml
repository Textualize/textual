<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Textual</title><link>https://textual.textualize.io/</link><atom:link href="https://textual.textualize.io/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/textualize/textual/</docs><language>en</language> <pubDate>Fri, 20 Jun 2025 14:23:23 -0000</pubDate> <lastBuildDate>Fri, 20 Jun 2025 14:23:23 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.15.0</generator> <item> <title>The future of Textualize</title> <author>willmcgugan</author> <category>News</category> <description>&lt;p&gt;Textual has come a &lt;em&gt;long&lt;/em&gt; way since I figured why not build an application framework on top of &lt;a href=&#34;https://github.com/Textualize/rich&#34;&gt;Rich&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Both were initially hobby projects. I mean look how much fun I was having back then:&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2025/05/07/the-future-of-textualize/</link> <pubDate>Wed, 14 May 2025 16:42:04 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2025/05/07/the-future-of-textualize/</guid> </item> <item> <title>Algorithms for high performance terminal apps</title> <author>willmcgugan</author> <category>Release</category> <description>&lt;p&gt;I&#39;ve had the fortune of being able to work fulltime on a FOSS project for the last three plus years.&lt;/p&gt;&lt;div style=&#34;width:250px;float:right;margin:10px;max-width:50%;&#34;&gt;&lt;a href=&#34;https://github.com/textualize/textual-demo&#34;&gt;--8&lt;-- &#34;docs/blog/images/textual-demo.svg&#34;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Textual has been a constant source of programming challenges.Often frustrating but never boring, the challenges arise because the terminal &#34;specification&#34; says nothing about how to build a modern User Interface.The building blocks are there: after some effort you can move the cursor, write colored text, read keys and mouse movements, but that&#39;s about it.Everything else we had to build from scratch. From the most basic &lt;a href=&#34;https://textual.textualize.io/widget_gallery/#button&#34;&gt;button&lt;/a&gt; to a syntax highlighted &lt;a href=&#34;https://textual.textualize.io/widget_gallery/#textarea&#34;&gt;TextArea&lt;/a&gt;, and everything along the way.&lt;/p&gt;&lt;p&gt;I wanted to write-up some of the solutions we came up with, and the 1.0 milestone we just passed makes this a perfect time.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2024/12/12/algorithms-for-high-performance-terminal-apps/</link> <pubDate>Sat, 26 Apr 2025 12:45:46 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2024/12/12/algorithms-for-high-performance-terminal-apps/</guid> </item> <item> <title>Smoother scrolling in the terminal &amp;mdash; a feature decades in the making</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;Smoother scrolling in the terminal &amp;mdash; a feature decades in the making&lt;/h1&gt;&lt;p&gt;The great philosopher F. Bueller once said ‚ÄúLife moves pretty fast. If you don&#39;t stop and look around once in a while, you could miss it.‚Äù&lt;/p&gt;&lt;p&gt;Beuller was &lt;em&gt;not&lt;/em&gt; taking about terminals, which tend not to move very fast at all.Until they do.From time to time terminals acquire new abilities after a long plateau.We are now seeing a kind of punctuated evolution in terminals which makes things possible that just weren&#39;t feasible a short time ago.&lt;/p&gt;&lt;p&gt;I want to talk about one such feature, which &lt;em&gt;I believe&lt;/em&gt; has been decades[^1] in the making.Take a look at the following screen recording (taken from a TUI running in the terminal):&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;A TUI Scrollbar&#34; src=&#34;../images/smooth-scroll/no-smooth-scroll.gif&#34;&gt;&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2025/02/16/smoother-scrolling-in-the-terminal-mdash-a-feature-decades-in-the-making/</link> <pubDate>Sun, 16 Feb 2025 12:06:48 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2025/02/16/smoother-scrolling-in-the-terminal-mdash-a-feature-decades-in-the-making/</guid> </item> <item> <title>Behind the Curtain of Inline Terminal Applications</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;Behind the Curtain of Inline Terminal Applications&lt;/h1&gt;&lt;p&gt;Textual recently added the ability to run &lt;em&gt;inline&lt;/em&gt; terminal apps.You can see this in action if you run the &lt;a href=&#34;https://github.com/Textualize/textual/blob/main/examples/calculator.py&#34;&gt;calculator example&lt;/a&gt;:&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;Inline Calculator&#34; src=&#34;../images/calcinline.png&#34;&gt;&lt;/p&gt;&lt;p&gt;The application appears directly under the prompt, rather than occupying the full height of the screen&amp;mdash;which is more typical of TUI applications.You can interact with this calculator using keys &lt;em&gt;or&lt;/em&gt; the mouse.When you press ++ctrl+q++ the calculator disappears and returns you to the prompt.&lt;/p&gt;&lt;p&gt;Here&#39;s another app that creates an inline code editor:&lt;/p&gt;&lt;p&gt;=== &#34;Video&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&#34;video-wrapper&#34;&amp;gt; &amp;lt;iframe width=&#34;852&#34; height=&#34;525&#34; src=&#34;https://www.youtube.com/embed/Dt70oSID1DY&#34; title=&#34;Inline app&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;=== &#34;inline.py&#34; ```python  from textual.app import App, ComposeResult from textual.widgets import TextArea&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class InlineApp(App): CSS = &#34;&#34;&#34; TextArea { height: auto; max-height: 50vh; } &#34;&#34;&#34; def compose(self) -&amp;gt; ComposeResult: yield TextArea(language=&#34;python&#34;)if __name__ == &#34;__main__&#34;: InlineApp().run(inline=True)```&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This post will cover some of what goes on under the hood to make such inline apps work.&lt;/p&gt;&lt;p&gt;It&#39;s not going to go in to too much detail.I&#39;m assuming most readers will be more interested in a birds-eye view rather than all the gory details.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2024/04/20/behind-the-curtain-of-inline-terminal-applications/</link> <pubDate>Fri, 06 Dec 2024 11:28:56 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2024/04/20/behind-the-curtain-of-inline-terminal-applications/</guid> </item> <item> <title>Textual 0.38.0 adds a syntax aware TextArea</title> <author>willmcgugan</author> <category>Release</category> <description>&lt;h1&gt;Textual 0.38.0 adds a syntax aware TextArea&lt;/h1&gt;&lt;p&gt;This is the second big feature release this month after last week&#39;s &lt;a href=&#34;./release0.37.0.md&#34;&gt;command palette&lt;/a&gt;.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/09/21/textual-0380-adds-a-syntax-aware-textarea/</link> <pubDate>Thu, 24 Oct 2024 17:22:54 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/09/21/textual-0380-adds-a-syntax-aware-textarea/</guid> </item> <item> <title>Anatomy of a Textual User Interface</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;Anatomy of a Textual User Interface&lt;/h1&gt;&lt;p&gt;!!! note &#34;My bad ü§¶&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;The date is wrong on this post&amp;amp;mdash;it was actually published on the 2nd of September 2024.I don&#39;t want to fix it, as that would break the URL.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I recently wrote a &lt;a href=&#34;https://en.wikipedia.org/wiki/Text-based_user_interface&#34;&gt;TUI&lt;/a&gt; to chat to an AI agent in the terminal.I&#39;m not the first to do this (shout out to &lt;a href=&#34;https://github.com/darrenburns/elia&#34;&gt;Elia&lt;/a&gt; and &lt;a href=&#34;https://github.com/villekr/paita&#34;&gt;Paita&lt;/a&gt;), but I &lt;em&gt;may&lt;/em&gt; be the first to have it reply as if it were the AI from the Aliens movies?&lt;/p&gt;&lt;p&gt;Here&#39;s a video of it in action:&lt;/p&gt;&lt;iframe width=&#34;100%&#34; style=&#34;aspect-ratio:1512 / 982&#34; src=&#34;https://www.youtube.com/embed/hr5JvQS4d_w&#34; title=&#34;Mother AI&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;Now let&#39;s dissect the code like Bishop dissects a facehugger.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2024/09/15/anatomy-of-a-textual-user-interface/</link> <pubDate>Sun, 08 Sep 2024 12:17:42 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2024/09/15/anatomy-of-a-textual-user-interface/</guid> </item> <item> <title>Towards Textual Web Applications</title> <author>darrenburns</author> <category>DevLog</category> <description>&lt;p&gt;In this post we&#39;ll look at some new functionality available in Textual apps accessed via a browser and how it helps provide a more equal experience across platforms.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2024/09/08/towards-textual-web-applications/</link> <pubDate>Sun, 08 Sep 2024 12:17:42 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2024/09/08/towards-textual-web-applications/</guid> </item> <item> <title>File magic with the Python standard library</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;File magic with the Python standard library&lt;/h1&gt;&lt;p&gt;I recently published &lt;a href=&#34;https://github.com/textualize/toolong&#34;&gt;Toolong&lt;/a&gt;, an app for viewing log files.There were some interesting technical challenges in building Toolong that I&#39;d like to cover in this post.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2024/02/11/file-magic-with-the-python-standard-library/</link> <pubDate>Sun, 03 Mar 2024 13:32:04 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2024/02/11/file-magic-with-the-python-standard-library/</guid> </item> <item> <title>Remote memory profiling with Memray</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;Remote memory profiling with Memray&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/bloomberg/memray&#34;&gt;Memray&lt;/a&gt; is a memory profiler for Python, built by some very smart devs at Bloomberg.It is a fantastic tool to identify memory leaks in your code or other libraries (down to the C level)!&lt;/p&gt;&lt;p&gt;They recently added a &lt;a href=&#34;https://github.com/textualize/textual/&#34;&gt;Textual&lt;/a&gt; interface which looks amazing, and lets you monitor your process right from the terminal:&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;Memray&#34; src=&#34;https://raw.githubusercontent.com/bloomberg/memray/main/docs/_static/images/live_animated.webp&#34;&gt;&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2024/02/20/remote-memory-profiling-with-memray/</link> <pubDate>Tue, 20 Feb 2024 15:54:07 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2024/02/20/remote-memory-profiling-with-memray/</guid> </item> <item> <title>Announcing textual-plotext</title> <author>davep</author> <category>DevLog</category> <description>&lt;h1&gt;Announcing textual-plotext&lt;/h1&gt;&lt;p&gt;It&#39;s no surprise that a common question on the &lt;a href=&#34;https://discord.gg/Enf6Z3qhVr&#34;&gt;Textual Discordserver&lt;/a&gt; is how to go about producing plots inthe terminal. A popular solution that has been suggested is&lt;a href=&#34;https://github.com/piccolomo/plotext&#34;&gt;Plotext&lt;/a&gt;. While Plotext doesn&#39;tdirectly support Textual, it is &lt;a href=&#34;https://github.com/piccolomo/plotext/blob/master/readme/environments.md#rich&#34;&gt;easy to use withRich&lt;/a&gt;and, because of this, we wanted to make it just as easy to use in yourTextual applications.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/10/04/announcing-textual-plotext/</link> <pubDate>Sat, 07 Oct 2023 13:42:11 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/10/04/announcing-textual-plotext/</guid> </item> <item> <title>Things I learned while building Textual&#39;s TextArea</title> <author>darrenburns</author> <category>DevLog</category> <description>&lt;h1&gt;Things I learned building a text editor for the terminal&lt;/h1&gt;&lt;p&gt;&lt;code&gt;TextArea&lt;/code&gt; is the latest widget to be added to Textual&#39;s &lt;a href=&#34;https://textual.textualize.io/widget_gallery/&#34;&gt;growing collection&lt;/a&gt;.It provides a multi-line space to edit text, and features optional syntax highlighting for a selection of languages.&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;text-area-welcome.gif&#34; src=&#34;../images/text-area-learnings/text-area-welcome.gif&#34;&gt;&lt;/p&gt;&lt;p&gt;Adding a &lt;code&gt;TextArea&lt;/code&gt; to your Textual app is as simple as adding this to your &lt;code&gt;compose&lt;/code&gt; method:&lt;/p&gt;&lt;p&gt;&lt;code&gt;pythonyield TextArea()&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Enabling syntax highlighting for a language is as simple as:&lt;/p&gt;&lt;p&gt;&lt;code&gt;pythonyield TextArea(language=&#34;python&#34;)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Working on the &lt;code&gt;TextArea&lt;/code&gt; widget for Textual taught me a lot about Python and my generalapproach to software engineering. It gave me an appreciation for the subtle functionality behindthe editors we use on a daily basis ‚Äî features we may not even notice, despitesome engineer spending hours perfecting it to provide a small boost to our development experience.&lt;/p&gt;&lt;p&gt;This post is a tour of some of these learnings.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/09/18/things-i-learned-while-building-textuals-textarea/</link> <pubDate>Sat, 23 Sep 2023 14:06:20 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/09/18/things-i-learned-while-building-textuals-textarea/</guid> </item> <item> <title>Textual 0.37.0 adds a command palette</title> <author>willmcgugan</author> <category>Release</category> <description>&lt;h1&gt;Textual 0.37.0 adds a command palette&lt;/h1&gt;&lt;p&gt;Textual version 0.37.0 has landed!The highlight of this release is the new command palette.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/09/15/textual-0370-adds-a-command-palette/</link> <pubDate>Fri, 15 Sep 2023 17:01:09 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/09/15/textual-0370-adds-a-command-palette/</guid> </item> <item> <title>What is Textual Web?</title> <author>willmcgugan</author> <category>News</category> <description>&lt;h1&gt;What is Textual Web?&lt;/h1&gt;&lt;p&gt;If you know us, you will know that we are the team behind &lt;a href=&#34;https://github.com/Textualize/rich&#34;&gt;Rich&lt;/a&gt; and &lt;a href=&#34;https://github.com/Textualize/textual&#34;&gt;Textual&lt;/a&gt; &amp;mdash; two popular Python libraries that work magic in the terminal.&lt;/p&gt;&lt;p&gt;!!! note&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Not to mention [Rich-CLI](https://github.com/Textualize/rich-cli), [Trogon](https://github.com/Textualize/trogon), and [Frogmouth](https://github.com/Textualize/frogmouth)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Today we are adding one project more to that lineup: &lt;a href=&#34;https://github.com/Textualize/textual-web&#34;&gt;textual-web&lt;/a&gt;.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/09/06/what-is-textual-web/</link> <pubDate>Wed, 06 Sep 2023 17:53:31 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/09/06/what-is-textual-web/</guid> </item> <item> <title>Pull Requests are cake or puppies</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;Pull Requests are cake or puppies&lt;/h1&gt;&lt;p&gt;Broadly speaking, there are two types of contributions you can make to an Open Source project.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/07/29/pull-requests-are-cake-or-puppies/</link> <pubDate>Sat, 29 Jul 2023 17:05:04 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/07/29/pull-requests-are-cake-or-puppies/</guid> </item> <item> <title>Using Rich Inspect to interrogate Python objects</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;Using Rich Inspect to interrogate Python objects&lt;/h1&gt;&lt;p&gt;The &lt;a href=&#34;https://github.com/Textualize/rich&#34;&gt;Rich&lt;/a&gt; library has a few functions that are admittedly a little out of scope for a terminal color library. One such function is &lt;code&gt;inspect&lt;/code&gt; which is so useful you may want to &lt;code&gt;pip install rich&lt;/code&gt; just for this feature.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/07/27/using-rich-inspect-to-interrogate-python-objects/</link> <pubDate>Thu, 27 Jul 2023 12:34:46 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/07/27/using-rich-inspect-to-interrogate-python-objects/</guid> </item> <item> <title>Textual 0.30.0 adds desktop-style notifications</title> <author>willmcgugan</author> <category>Release</category> <description>&lt;h1&gt;Textual 0.30.0 adds desktop-style notifications&lt;/h1&gt;&lt;p&gt;We have a new release of Textual to talk about, but before that I&#39;d like to cover a little Textual news.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/07/17/textual-0300-adds-desktop-style-notifications/</link> <pubDate>Mon, 17 Jul 2023 14:08:32 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/07/17/textual-0300-adds-desktop-style-notifications/</guid> </item> <item> <title>Textual 0.29.0 refactors dev tools</title> <author>willmcgugan</author> <category>Release</category> <description>&lt;h1&gt;Textual 0.29.0 refactors dev tools&lt;/h1&gt;&lt;p&gt;It&#39;s been a slow week or two at Textualize, with Textual devs taking well-earned annual leave, but we still managed to get a new version out.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/07/03/textual-0290-refactors-dev-tools/</link> <pubDate>Mon, 03 Jul 2023 16:09:24 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/07/03/textual-0290-refactors-dev-tools/</guid> </item> <item> <title>To TUI or not to TUI</title> <author>willmcgugan</author> <category>DevLog</category> <description>&lt;h1&gt;To TUI or not to TUI&lt;/h1&gt;&lt;p&gt;Tech moves pretty fast.If you don‚Äôt stop and look around once in a while, you could miss it.And yet some technology feels like it has been around forever.&lt;/p&gt;&lt;p&gt;Terminals are one of those forever-technologies.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/06/06/to-tui-or-not-to-tui/</link> <pubDate>Mon, 05 Jun 2023 17:51:19 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/06/06/to-tui-or-not-to-tui/</guid> </item> <item> <title>Textual adds Sparklines, Selection list, Input validation, and tool tips</title> <author>willmcgugan</author> <category>Release</category> <description>&lt;h1&gt;Textual adds Sparklines, Selection list, Input validation, and tool tips&lt;/h1&gt;&lt;p&gt;It&#39;s been 12 days since the last Textual release, which is longer than our usual release cycle of a week.&lt;/p&gt;&lt;p&gt;We&#39;ve been a little distracted with our &#34;dogfood&#34; projects: &lt;a href=&#34;https://github.com/Textualize/frogmouth&#34;&gt;Frogmouth&lt;/a&gt; and &lt;a href=&#34;https://github.com/Textualize/trogon&#34;&gt;Trogon&lt;/a&gt;. Both of which hit 1000 Github stars in 24 hours. We will be maintaining / updating those, but it is business as usual for this Textual release (and it&#39;s a big one). We have such sights to show you.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/06/01/textual-adds-sparklines-selection-list-input-validation-and-tool-tips/</link> <pubDate>Thu, 01 Jun 2023 17:41:08 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/06/01/textual-adds-sparklines-selection-list-input-validation-and-tool-tips/</guid> </item> <item> <title>Textual 0.24.0 adds a Select control</title> <author>willmcgugan</author> <category>Release</category> <description>&lt;h1&gt;Textual 0.24.0 adds a Select control&lt;/h1&gt;&lt;p&gt;Coming just 5 days after the last release, we have version 0.24.0 which we are crowning the King of Textual releases.At least until it is deposed by version 0.25.0.&lt;/p&gt;</description><link>https://textual.textualize.io/blog/2023/05/08/textual-0240-adds-a-select-control/</link> <pubDate>Thu, 01 Jun 2023 11:33:54 +0000</pubDate><source url="https://textual.textualize.io/feed_rss_updated.xml">Textual</source><guid isPermaLink="true">https://textual.textualize.io/blog/2023/05/08/textual-0240-adds-a-select-control/</guid> </item> </channel></rss>